generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id             BigInt          @id @default(autoincrement())
  email          String          @unique @db.VarChar(128)
  name           String          @db.VarChar(256)
  type           AccountType
  createdAt      DateTime        @default(now()) @map("created_at")
  updatedAt      DateTime        @default(now()) @updatedAt @map("updated_at")
  socialAccounts SocialAccount[]

  @@map("accounts")
}

model SocialAccount {
  id          BigInt                @id @default(autoincrement())
  provider    SocialAccountProvider @default(google)
  providerId  String                @map("provider_id") @db.VarChar(128)
  account     Account               @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId   BigInt                @map("account_id")
  accessToken AccessToken?
  createdAt   DateTime              @default(now()) @map("created_at")
  updatedAt   DateTime              @default(now()) @updatedAt @map("updated_at")

  @@unique([providerId, accountId])
  @@map("social_accounts")
}

model AccessToken {
  id              BigInt        @id @default(autoincrement())
  socialAccount   SocialAccount @relation(fields: [socialAccountId], references: [id], onDelete: Cascade)
  socialAccountId BigInt        @unique @map("social_account_id")
  accessToken     String        @map("access_token")
  refreshToken    String?       @map("refresh_token")
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @default(now()) @updatedAt @map("updated_at")

  @@map("access_tokens")
}

enum SocialAccountProvider {
  google

  @@map("social_account_provider")
}

enum AccountType {
  manager
  team

  @@map("account_type")
}
